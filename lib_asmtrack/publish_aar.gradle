apply plugin: 'maven-publish'
apply plugin: 'signing'

task androidSourcesJar(type: Jar) {
    archiveClassifier = 'sources'
//    from sourceSets.main.java.source
    from android.sourceSets.main.java.source
}

ext {
    PUBLISH_GROUP_ID = "io.github.light-echo-3" //项目包名
    PUBLISH_ARTIFACT_ID = 'asmtraceLib'            //项目名
    PUBLISH_VERSION = "3.0.0"                  //版本号
}

ext["signing.keyId"] = ''
ext["signing.password"] = ''
ext["signing.secretKeyRingFile"] = ''
ext["ossrhUsername"] = ''
ext["ossrhPassword"] = ''

File secretPropsFile = project.rootProject.file('local.properties')
if (secretPropsFile.exists()) {
    println "---Found secret props file, loading props"
    Properties p = new Properties()
    p.load(new FileInputStream(secretPropsFile))
    p.each { name, value ->
        ext[name] = value
    }
} else {
    println "No props file, loading env vars"
}


publishing{
    publications{
        release(MavenPublication) {
            // The coordinates of the library, being set from variables that
            // we'll set up in a moment
            groupId PUBLISH_GROUP_ID
            artifactId PUBLISH_ARTIFACT_ID
            version PUBLISH_VERSION

            // Two artifacts, the `aar` and the sources
            artifact("$buildDir/outputs/aar/${project.getName()}-release.aar")
            artifact androidSourcesJar
            // Self-explanatory metadata for the most part
            pom {
                name = PUBLISH_ARTIFACT_ID
                description = 'asm trace plugin depend aar'
                // If your project has a dedicated site, use its URL here
                url = 'https://github.com/light-echo-3/AsmTrace'
                licenses {
                    license {
                        //协议类型，一般默认Apache License2.0的话不用改：
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'lightEcho3Id'
                        name = 'lightEcho3'
                        email = 'hudequan777@gmail.com'
                    }
                }
                // Version control info, if you're using GitHub, follow the format as seen here
                scm {
                    //修改成你的Git地址： https://github.com/maqing-programmer/openlibrary.git
                    connection = 'scm:git:git://github.com/light-echo-3/AsmTrace.git'
                    developerConnection = 'scm:git:ssh://github.com:light-echo-3/AsmTrace.git'
                    //分支地址：
                    url = 'https://github.com/light-echo-3/AsmTrace/tree/main'
                }
                // A slightly hacky fix so that your POM will include any transitive dependencies
                // that your library builds upon
                withXml {

                    def dependenciesNode = asNode().appendNode('dependencies')

                    project.configurations.implementation.allDependencies.each {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }

                }
            }
        }
    }
    repositories {

        maven {
            name = "buildRepo"
            url = uri(layout.buildDirectory.dir("staging-deploy"))
        }

        // The repository to publish to, Sonatype/MavenCentral
        maven {
            // This is an arbitrary name, you may also use "mavencentral" or
            // any other name that's descriptive for you
            name = "Releases"

            def releasesRepoUrl = "https://central.sonatype.com/api/v1/publisher/deployments/download/"
            def snapshotsRepoUrl = "https://central.sonatype.com/api/v1/publisher/deployments/download/"
            // You only need this if you want to publish snapshots, otherwise just set the URL
            // to the release repo directly
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

            // The username and password we've fetched earlier
            credentials {
                username ossrhUsername
                password ossrhPassword
            }
        }

        //官网：https://central.sonatype.org/publish/publish-portal-api/#gradle
        maven {
            name = "centralManualTesting"
//            url "https://central.sonatype.com/api/v1/publisher/deployments/download/"
            url "https://central.sonatype.com/api/v1/publisher/deployments/download/"
            credentials(HttpHeaderCredentials)
            authentication {
                header(HttpHeaderAuthentication)
            }
        }

    }
}

signing {
    sign publishing.publications
}
